<?php

namespace Beer_List\Blocks;

use Underpin\Traits\Templates;
use Underpin_Blocks\Abstracts\Block;

if ( ! defined( 'ABSPATH' ) ) {
	exit;
}


class Beer_List extends Block {

	use Templates;

	public $name        = 'Beer List';
	public $description = 'Displays a list of beers.';
	public $type        = 'beer-list/beer-list';

	public function __construct() {
		$this->args = [
			'render_callback' => [ $this, 'render' ],
			'style'           => 'beer-list-style',
			'attributes'      => [
				'srm'            => [
					'type' => 'object',
				],
				'abv'            => [
					'type' => 'object',
				],
				'ibu'            => [
					'type' => 'object',
				],
				'style'          => [
					'type' => 'integer',
				],
				'posts_per_page' => [
					'type' => 'integer',
				],
				'order'          => [
					'type' => 'string',
				],
				'orderby'        => [
					'type' => 'string',
				],
				'meta_key'       => [
					'type' => 'string',
				],
				'on_tap'         => [
					'type' => 'boolean',
				],
			],
		];
		parent::__construct();

	}

	public function do_actions() {

		// Set up the beer list stylesheet
		beer()->styles()->add( 'beer_list', [
			'handle'      => 'beer-list',
			'src'         => beer()->css_url() . 'beer-list.css',
			'name'        => 'Beer List',
			'description' => 'Styles specific to the beer list block.',
		] );

		parent::do_actions(); // TODO: Change the autogenerated stub
	}

	public function render( $params ) {
		beer()->styles()->get( 'beer_list' )->enqueue();
		$beers = get_beers( $params );
		$args  = [ 'beers' => $beers->posts ];

		if ( isset( $params['className'] ) ) {
			$args['wrapper_class'] = $params['className'];
		} else {
			$args['wrapper_class'] = '';
		}

		return $this->get_template( 'wrapper', $args );
	}

	public function get_templates() {
		return [
			'wrapper'  => [ 'override_visibility' => 'public' ],
			'beer'     => [ 'override_visibility' => 'public' ],
			'no-beer'  => [ 'override_visibility' => 'public' ],
			'srm-icon' => [ 'override_visibility' => 'public' ],
		];
	}

	protected function get_template_group() {
		return 'beer-list-block';
	}

	protected function get_override_dir() {
		return 'beer-list';
	}

	protected function get_template_root_path() {
		return beer()->template_dir();
	}

}